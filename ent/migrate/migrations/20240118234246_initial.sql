-- Create "ent_types" table
CREATE TABLE "ent_types" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "type" character varying NOT NULL, PRIMARY KEY ("id"));
-- Create index "ent_types_type_key" to table: "ent_types"
CREATE UNIQUE INDEX "ent_types_type_key" ON "ent_types" ("type");
-- Create "webhook_retry_attempts" table
CREATE TABLE "webhook_retry_attempts" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 68719476736), "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "attempt_number" bigint NOT NULL, "next_retry_time" timestamptz NOT NULL, "payload" jsonb NOT NULL, "signature" character varying NULL, "webhook_url" character varying NOT NULL, "status" character varying NOT NULL DEFAULT 'failed', PRIMARY KEY ("id"));
-- Create "fiat_currencies" table
CREATE TABLE "fiat_currencies" ("id" uuid NOT NULL, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "code" character varying NOT NULL, "short_name" character varying NOT NULL, "decimals" bigint NOT NULL DEFAULT 2, "symbol" character varying NOT NULL, "name" character varying NOT NULL, "market_rate" double precision NOT NULL, "is_enabled" boolean NOT NULL DEFAULT false, PRIMARY KEY ("id"));
-- Create index "fiat_currencies_code_key" to table: "fiat_currencies"
CREATE UNIQUE INDEX "fiat_currencies_code_key" ON "fiat_currencies" ("code");
-- Create index "fiat_currencies_short_name_key" to table: "fiat_currencies"
CREATE UNIQUE INDEX "fiat_currencies_short_name_key" ON "fiat_currencies" ("short_name");
-- Create "users" table
CREATE TABLE "users" ("id" uuid NOT NULL, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "first_name" character varying NOT NULL, "last_name" character varying NOT NULL, "email" character varying NOT NULL, "password" character varying NOT NULL, "scope" character varying NOT NULL, "is_email_verified" boolean NOT NULL DEFAULT false, PRIMARY KEY ("id"));
-- Create index "user_email_scope" to table: "users"
CREATE UNIQUE INDEX "user_email_scope" ON "users" ("email", "scope");
-- Create index "users_email_key" to table: "users"
CREATE UNIQUE INDEX "users_email_key" ON "users" ("email");
-- Create "provider_profiles" table
CREATE TABLE "provider_profiles" ("id" character varying NOT NULL, "trading_name" character varying NOT NULL, "host_identifier" character varying NULL, "provision_mode" character varying NOT NULL DEFAULT 'auto', "is_partner" boolean NOT NULL DEFAULT false, "is_active" boolean NOT NULL DEFAULT false, "is_available" boolean NOT NULL DEFAULT false, "updated_at" timestamptz NOT NULL, "visibility_mode" character varying NOT NULL DEFAULT 'public', "address" text NULL, "mobile_number" character varying NULL, "date_of_birth" timestamptz NULL, "business_name" character varying NULL, "identity_document_type" character varying NULL, "identity_document" character varying NULL, "business_document" character varying NULL, "fiat_currency_providers" uuid NOT NULL, "user_provider_profile" uuid NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "provider_profiles_fiat_currencies_providers" FOREIGN KEY ("fiat_currency_providers") REFERENCES "fiat_currencies" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "provider_profiles_users_provider_profile" FOREIGN KEY ("user_provider_profile") REFERENCES "users" ("id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- Create index "provider_profiles_user_provider_profile_key" to table: "provider_profiles"
CREATE UNIQUE INDEX "provider_profiles_user_provider_profile_key" ON "provider_profiles" ("user_provider_profile");
-- Create "sender_profiles" table
CREATE TABLE "sender_profiles" ("id" uuid NOT NULL, "webhook_url" character varying NULL, "fee_per_token_unit" double precision NOT NULL, "fee_address" character varying NULL, "refund_address" character varying NULL, "domain_whitelist" jsonb NOT NULL, "is_active" boolean NOT NULL DEFAULT false, "updated_at" timestamptz NOT NULL, "user_sender_profile" uuid NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "sender_profiles_users_sender_profile" FOREIGN KEY ("user_sender_profile") REFERENCES "users" ("id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- Create index "sender_profiles_user_sender_profile_key" to table: "sender_profiles"
CREATE UNIQUE INDEX "sender_profiles_user_sender_profile_key" ON "sender_profiles" ("user_sender_profile");
-- Create "api_keys" table
CREATE TABLE "api_keys" ("id" uuid NOT NULL, "secret" character varying NOT NULL, "provider_profile_api_key" character varying NULL, "sender_profile_api_key" uuid NULL, PRIMARY KEY ("id"), CONSTRAINT "api_keys_provider_profiles_api_key" FOREIGN KEY ("provider_profile_api_key") REFERENCES "provider_profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "api_keys_sender_profiles_api_key" FOREIGN KEY ("sender_profile_api_key") REFERENCES "sender_profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- Create index "api_keys_provider_profile_api_key_key" to table: "api_keys"
CREATE UNIQUE INDEX "api_keys_provider_profile_api_key_key" ON "api_keys" ("provider_profile_api_key");
-- Create index "api_keys_secret_key" to table: "api_keys"
CREATE UNIQUE INDEX "api_keys_secret_key" ON "api_keys" ("secret");
-- Create index "api_keys_sender_profile_api_key_key" to table: "api_keys"
CREATE UNIQUE INDEX "api_keys_sender_profile_api_key_key" ON "api_keys" ("sender_profile_api_key");
-- Create "provision_buckets" table
CREATE TABLE "provision_buckets" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 42949672960), "min_amount" double precision NOT NULL, "max_amount" double precision NOT NULL, "created_at" timestamptz NOT NULL, "fiat_currency_provision_buckets" uuid NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "provision_buckets_fiat_currencies_provision_buckets" FOREIGN KEY ("fiat_currency_provision_buckets") REFERENCES "fiat_currencies" ("id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- Create "networks" table
CREATE TABLE "networks" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 17179869184), "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "chain_id" bigint NOT NULL, "identifier" character varying NOT NULL, "rpc_endpoint" character varying NOT NULL, "is_testnet" boolean NOT NULL, PRIMARY KEY ("id"));
-- Create index "networks_identifier_key" to table: "networks"
CREATE UNIQUE INDEX "networks_identifier_key" ON "networks" ("identifier");
-- Create "tokens" table
CREATE TABLE "tokens" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 55834574848), "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "symbol" character varying NOT NULL, "contract_address" character varying NOT NULL, "decimals" smallint NOT NULL, "is_enabled" boolean NOT NULL DEFAULT false, "network_tokens" bigint NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "tokens_networks_tokens" FOREIGN KEY ("network_tokens") REFERENCES "networks" ("id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- Create "lock_payment_orders" table
CREATE TABLE "lock_payment_orders" ("id" uuid NOT NULL, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "order_id" character varying NOT NULL, "amount" double precision NOT NULL, "rate" double precision NOT NULL, "order_percent" double precision NULL, "tx_hash" character varying NULL, "label" character varying NOT NULL, "status" character varying NOT NULL DEFAULT 'pending', "block_number" bigint NOT NULL, "institution" character varying NOT NULL, "account_identifier" character varying NOT NULL, "account_name" character varying NOT NULL, "memo" character varying NULL, "cancellation_count" bigint NOT NULL DEFAULT 0, "cancellation_reasons" jsonb NOT NULL, "provider_profile_assigned_orders" character varying NULL, "provision_bucket_lock_payment_orders" bigint NULL, "token_lock_payment_orders" bigint NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "lock_payment_orders_provider_profiles_assigned_orders" FOREIGN KEY ("provider_profile_assigned_orders") REFERENCES "provider_profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "lock_payment_orders_provision_buckets_lock_payment_orders" FOREIGN KEY ("provision_bucket_lock_payment_orders") REFERENCES "provision_buckets" ("id") ON UPDATE NO ACTION ON DELETE SET NULL, CONSTRAINT "lock_payment_orders_tokens_lock_payment_orders" FOREIGN KEY ("token_lock_payment_orders") REFERENCES "tokens" ("id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- Create "lock_order_fulfillments" table
CREATE TABLE "lock_order_fulfillments" ("id" uuid NOT NULL, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "tx_id" character varying NOT NULL, "validation_status" character varying NOT NULL DEFAULT 'pending', "validation_error" character varying NULL, "lock_payment_order_fulfillment" uuid NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "lock_order_fulfillments_lock_payment_orders_fulfillment" FOREIGN KEY ("lock_payment_order_fulfillment") REFERENCES "lock_payment_orders" ("id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- Create index "lock_order_fulfillments_lock_payment_order_fulfillment_key" to table: "lock_order_fulfillments"
CREATE UNIQUE INDEX "lock_order_fulfillments_lock_payment_order_fulfillment_key" ON "lock_order_fulfillments" ("lock_payment_order_fulfillment");
-- Create index "lock_order_fulfillments_tx_id_key" to table: "lock_order_fulfillments"
CREATE UNIQUE INDEX "lock_order_fulfillments_tx_id_key" ON "lock_order_fulfillments" ("tx_id");
-- Create "payment_orders" table
CREATE TABLE "payment_orders" ("id" uuid NOT NULL, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "amount" double precision NOT NULL, "amount_paid" double precision NOT NULL, "amount_returned" double precision NOT NULL, "sender_fee" double precision NOT NULL, "network_fee_estimate" double precision NOT NULL, "rate" double precision NOT NULL, "tx_hash" character varying NULL, "receive_address_text" character varying NOT NULL, "label" character varying NOT NULL, "status" character varying NOT NULL DEFAULT 'initiated', "api_key_payment_orders" uuid NULL, "sender_profile_payment_orders" uuid NOT NULL, "token_payment_orders" bigint NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "payment_orders_api_keys_payment_orders" FOREIGN KEY ("api_key_payment_orders") REFERENCES "api_keys" ("id") ON UPDATE NO ACTION ON DELETE SET NULL, CONSTRAINT "payment_orders_sender_profiles_payment_orders" FOREIGN KEY ("sender_profile_payment_orders") REFERENCES "sender_profiles" ("id") ON UPDATE NO ACTION ON DELETE SET NULL, CONSTRAINT "payment_orders_tokens_payment_orders" FOREIGN KEY ("token_payment_orders") REFERENCES "tokens" ("id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- Create "payment_order_recipients" table
CREATE TABLE "payment_order_recipients" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 25769803776), "institution" character varying NOT NULL, "account_identifier" character varying NOT NULL, "account_name" character varying NOT NULL, "memo" character varying NULL, "provider_id" character varying NULL, "payment_order_recipient" uuid NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "payment_order_recipients_payment_orders_recipient" FOREIGN KEY ("payment_order_recipient") REFERENCES "payment_orders" ("id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- Create index "payment_order_recipients_payment_order_recipient_key" to table: "payment_order_recipients"
CREATE UNIQUE INDEX "payment_order_recipients_payment_order_recipient_key" ON "payment_order_recipients" ("payment_order_recipient");
-- Create "provider_order_tokens" table
CREATE TABLE "provider_order_tokens" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 30064771072), "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "symbol" character varying NOT NULL, "fixed_conversion_rate" double precision NOT NULL, "floating_conversion_rate" double precision NOT NULL, "conversion_rate_type" character varying NOT NULL, "max_order_amount" double precision NOT NULL, "min_order_amount" double precision NOT NULL, "addresses" jsonb NOT NULL, "provider_profile_order_tokens" character varying NULL, PRIMARY KEY ("id"), CONSTRAINT "provider_order_tokens_provider_profiles_order_tokens" FOREIGN KEY ("provider_profile_order_tokens") REFERENCES "provider_profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- Create "provider_ratings" table
CREATE TABLE "provider_ratings" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 38654705664), "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "trust_score" double precision NOT NULL, "provider_profile_provider_rating" character varying NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "provider_ratings_provider_profiles_provider_rating" FOREIGN KEY ("provider_profile_provider_rating") REFERENCES "provider_profiles" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- Create index "provider_ratings_provider_profile_provider_rating_key" to table: "provider_ratings"
CREATE UNIQUE INDEX "provider_ratings_provider_profile_provider_rating_key" ON "provider_ratings" ("provider_profile_provider_rating");
-- Create "provision_bucket_provider_profiles" table
CREATE TABLE "provision_bucket_provider_profiles" ("provision_bucket_id" bigint NOT NULL, "provider_profile_id" character varying NOT NULL, PRIMARY KEY ("provision_bucket_id", "provider_profile_id"), CONSTRAINT "provision_bucket_provider_profiles_provider_profile_id" FOREIGN KEY ("provider_profile_id") REFERENCES "provider_profiles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "provision_bucket_provider_profiles_provision_bucket_id" FOREIGN KEY ("provision_bucket_id") REFERENCES "provision_buckets" ("id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- Create "receive_addresses" table
CREATE TABLE "receive_addresses" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 47244640256), "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "address" character varying NOT NULL, "salt" bytea NOT NULL, "status" character varying NOT NULL DEFAULT 'unused', "last_indexed_block" bigint NULL, "last_used" timestamptz NULL, "valid_until" timestamptz NULL, "payment_order_receive_address" uuid NULL, PRIMARY KEY ("id"), CONSTRAINT "receive_addresses_payment_orders_receive_address" FOREIGN KEY ("payment_order_receive_address") REFERENCES "payment_orders" ("id") ON UPDATE NO ACTION ON DELETE SET NULL);
-- Create index "receive_addresses_address_key" to table: "receive_addresses"
CREATE UNIQUE INDEX "receive_addresses_address_key" ON "receive_addresses" ("address");
-- Create index "receive_addresses_payment_order_receive_address_key" to table: "receive_addresses"
CREATE UNIQUE INDEX "receive_addresses_payment_order_receive_address_key" ON "receive_addresses" ("payment_order_receive_address");
-- Create index "receive_addresses_salt_key" to table: "receive_addresses"
CREATE UNIQUE INDEX "receive_addresses_salt_key" ON "receive_addresses" ("salt");
-- Create "verification_tokens" table
CREATE TABLE "verification_tokens" ("id" uuid NOT NULL, "created_at" timestamptz NOT NULL, "updated_at" timestamptz NOT NULL, "token" character varying NOT NULL, "scope" character varying NOT NULL, "expiry_at" timestamptz NOT NULL, "user_verification_token" uuid NOT NULL, PRIMARY KEY ("id"), CONSTRAINT "verification_tokens_users_verification_token" FOREIGN KEY ("user_verification_token") REFERENCES "users" ("id") ON UPDATE NO ACTION ON DELETE CASCADE);
-- Add pk ranges for ('api_keys'),('fiat_currencies'),('lock_order_fulfillments'),('lock_payment_orders'),('networks'),('payment_orders'),('payment_order_recipients'),('provider_order_tokens'),('provider_profiles'),('provider_ratings'),('provision_buckets'),('receive_addresses'),('sender_profiles'),('tokens'),('users'),('verification_tokens'),('webhook_retry_attempts') tables
INSERT INTO "ent_types" ("type") VALUES ('api_keys'), ('fiat_currencies'), ('lock_order_fulfillments'), ('lock_payment_orders'), ('networks'), ('payment_orders'), ('payment_order_recipients'), ('provider_order_tokens'), ('provider_profiles'), ('provider_ratings'), ('provision_buckets'), ('receive_addresses'), ('sender_profiles'), ('tokens'), ('users'), ('verification_tokens'), ('webhook_retry_attempts');
