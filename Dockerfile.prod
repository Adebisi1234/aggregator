# Start from golang base image
FROM golang:1.22rc2-alpine3.19 as builder

# Install git.
RUN apk update && apk add --no-cache git

# Working directory
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies
RUN go mod download

# Copy everything
COPY . .

# Build the Go app
RUN CGO_ENABLED=0 GOOS=linux go build -mod=readonly -v -o main .

# Start a new stage from scratch
FROM alpine:latest
RUN apk --no-cache add ca-certificates

WORKDIR /root/

# Copy the Pre-built binary file from the previous stage. Also copy config yml file
COPY --from=builder /app/main .
COPY --from=builder /app/.env.example .env
COPY --from=builder /app/ent/migrate ./ent/migrate

# Install atlas
RUN apk --no-cache add curl && curl -sSf https://atlasgo.sh | sh

# Apply atlas migrations
RUN atlas migrate apply \
    --dir "file://ent/migrate/migrations" \
    --url "postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=${SSL_MODE}&search_path=public"

# Expose port 8080 to the outside world
EXPOSE 8000

# Command to run the executable
CMD ["./main"]